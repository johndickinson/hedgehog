#!/bin/bash
#
# Copyright 2015 Internet Corporation for Assigned Names and Numbers.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Developed by Sinodun IT (www.sinodun.com)
#

# 
# File:   000009_ddl_traffic_difference
#

eval $(@LIBEXEC@/conf_read)

DB_NAME=$hhconfig_database_name
DATA_DIR=$hhconfig_directories_data
SQ="'"
PREDICT=0;
SUPPRESS_WARNINGS=0
export PGPASSWORD=$hhconfig_database_owner_pass

set -e
NEW_DDL_SERIAL=12
REQUIRED_DDL_SERIAL=$(( $NEW_DDL_SERIAL - 1 ))
NEW_API_VERSION=9
REQUIRED_API_VERSION=$(( $NEW_API_VERSION - 0 ))

DSC_SCHEMA="dsc"

CONCURRENT=0
SKIP=0

usage () {
    echo
    echo "Usage: $(basename $0) options"
    echo
    echo "Supported options:"
    echo "  -c Build the indexes with the CONCURRENTLY flag set. This is slower"
    echo "     but allows writes to continue being made to the tables."
    echo "  -s Skip creating the new indexes. The new indexes should improve"
    echo "     performance but are optional. You still need to run this script to"
    echo "     update version numbers correctly in the database."
    echo "  -h Show this help."
    exit 1
}


while getopts ":csh" opt; do
    case $opt in
        c  ) CONCURRENT=1 ;;
        s  ) SKIP=1 ;;
        h  ) usage ;;
        \? ) usage ;;
    esac
done

if [ $SKIP -eq 0 ] ; then
  echo "This script creates new indexes on all the data tables. It will take a long"
  echo "time to complete if you have a lot of data. In addition it requires a lock"
  echo "against writes to the tables being updated (reads are fine)."
  echo "You should either:"
  echo "1. Stop database writes while this script is running"
  echo "2. Set the -c flag to build the indexes concurrently"
  echo "3. Set the -s flag to skip index creation."
  echo
  echo "See the usage (-h) for more details."
  echo
  echo "Do you wish to continue? [yN]"
  read c
  [[ ! "$c" =~ ^(Y|y) ]] && exit 1
fi

echo "`date`: $0 COMMENCED"
USER=$(whoami)
[ $USER != $hhconfig_database_owner ] && echo "Must be $hhconfig_database_owner to run this script" && exit 1

DB_API_VERSION=`psql -h $hhconfig_database_host $DB_NAME -tc  "select version from dsc.version;"`
[ $DB_API_VERSION != $REQUIRED_API_VERSION ] && echo "Error: Database API version incorrect." && exit 1

LAST_SERIAL=`psql -h $hhconfig_database_host $DB_NAME -tc  "select max(serial) from dsc.internal_version;"`
[ $LAST_SERIAL != $REQUIRED_DDL_SERIAL ] && echo "Error: ddl scripts not run in correct order." && exit 1

# Create node_id indexes on all data tables
if [ $SKIP -eq 0 ] ; then
  MYFILE=$(mktemp)
  if [ $CONCURRENT -eq 0 ] ; then
    psql -h $hhconfig_database_host $DB_NAME -tc "select 'create index idx_' || table_name || '_lower_key1 on ' || table_name || ' (lower(key1));' FROM information_schema.tables where table_name like 'data\_%' and table_type='BASE TABLE' and table_schema='dsc';" > $MYFILE
  else
    psql -h $hhconfig_database_host $DB_NAME -tc "select 'create index CONCURRENTLY idx_' || table_name || '_lower_key1 on ' || table_name || ' (lower(key1));' FROM information_schema.tables where table_name like 'data\_%' and table_type='BASE TABLE' and table_schema='dsc';" > $MYFILE
  fi
  psql -h $hhconfig_database_host $DB_NAME < $MYFILE
  rm $MYFILE
fi

psql -h $hhconfig_database_host $DB_NAME <<EOF
BEGIN;
UPDATE $DSC_SCHEMA.version SET version = $NEW_API_VERSION;
INSERT INTO $DSC_SCHEMA.internal_version ( serial, script, description, applied ) VALUES ( $NEW_DDL_SERIAL, '$0', 'Added new query/response difference plot for rssac', now() );
COMMIT;
EOF

echo "`date`: $0 COMPLETED"
